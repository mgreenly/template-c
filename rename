#!/bin/bash

if [ $# -ne 2 ]; then
    echo "Usage: $0 <old-name> <new-name>"
    echo "Example: $0 oldlib newlib"
    exit 1
fi

OLD_NAME="$1"
NEW_NAME="$2"

echo "Renaming all occurrences of '$OLD_NAME' to '$NEW_NAME'..."

# Convert to uppercase for case-sensitive replacements
OLD_NAME_UPPER=$(echo "$OLD_NAME" | tr '[:lower:]' '[:upper:]')
NEW_NAME_UPPER=$(echo "$NEW_NAME" | tr '[:lower:]' '[:upper:]')

# Find all files that will be processed
files_to_process=$(find . -type f \
    -not -path "./.git/*" \
    -not -path "./obj/*" \
    -not -path "./lib/*" \
    -not -path "./bin/*" \
    -not -path "./tmp/*" \
    -not -name "rename.sh" \
    -not -name "*.o" \
    -not -name "*.so*" \
    -not -name "*.a" \
    -not -name "*.pc" \
    -exec grep -l "$OLD_NAME\|$OLD_NAME_UPPER" {} \; 2>/dev/null)

# Find the maximum line count to determine padding needed
max_lines=0
for file in $files_to_process; do
    line_count=$(wc -l < "$file")
    if [ $line_count -gt $max_lines ]; then
        max_lines=$line_count
    fi
done

# Determine the number of digits needed
if [ $max_lines -eq 0 ]; then
    line_digits=1
else
    line_digits=${#max_lines}
fi

# Find the longest filename for alignment
max_filename_length=0
for file in $files_to_process; do
    length=${#file}
    if [ $length -gt $max_filename_length ]; then
        max_filename_length=$length
    fi
done

# Calculate total alignment width
max_length=$((max_filename_length + 1 + line_digits + 3))

# Process files
for file in $files_to_process; do
    # Use sed to do the replacement
    sed -i \
        -e "s/${OLD_NAME}/${NEW_NAME}/g" \
        -e "s/${OLD_NAME_UPPER}/${NEW_NAME_UPPER}/g" \
        "$file"

    # Show what was changed with line numbers (zero-padded to appropriate digits)
    grep -n "$NEW_NAME\|$NEW_NAME_UPPER" "$file" 2>/dev/null | while IFS=: read -r line_num line_content; do
        # Strip leading whitespace from line content
        trimmed_content=$(echo "$line_content" | sed 's/^[[:space:]]*//')
        printf "%*s:%0*d - %s\n" "$max_filename_length" "$file" "$line_digits" "$line_num" "$trimmed_content"
    done
done

# Check if there are files to rename
files_to_rename=$(find . -type f \
    -not -path "./.git/*" \
    -not -path "./obj/*" \
    -not -path "./lib/*" \
    -not -path "./bin/*" \
    -not -path "./tmp/*" \
    -not -name "rename.sh" \
    -name "*${OLD_NAME}*" 2>/dev/null)

if [ -n "$files_to_rename" ]; then
    echo ""
    echo "Renamed Files"
    echo "$files_to_rename" | while read -r file; do
        newfile=$(echo "$file" | sed "s/${OLD_NAME}/${NEW_NAME}/g")
        if [ "$file" != "$newfile" ]; then
            echo "$file â†’ $newfile"
            mv "$file" "$newfile"
        fi
    done
fi

echo ""
echo "Complete! All occurrences of '$OLD_NAME' have been replaced with '$NEW_NAME'"